I"<<h2 id="question">Question</h2>

<p>Euler’s Totient function, \(\phi(n)\) [sometimes called the phi function], is used to determine the number of numbers less than \(n\) which are relatively prime to \(n\). For example, as 1, 2, 4, 5, 7, and 8, are all less than nine and relatively prime to nine, \(\phi(9)=6\).</p>

<table>
  <thead>
    <tr>
      <th>\(n\)</th>
      <th>Relatively Prime</th>
      <th>\(\phi(n)\)</th>
      <th>\(n/\phi(n)\)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>3</td>
      <td>1,2</td>
      <td>2</td>
      <td>1.5</td>
    </tr>
    <tr>
      <td>4</td>
      <td>1,3</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>5</td>
      <td>1,2,3,4</td>
      <td>4</td>
      <td>1.25</td>
    </tr>
    <tr>
      <td>6</td>
      <td>1,5</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>7</td>
      <td>1,2,3,4,5,6</td>
      <td>6</td>
      <td>1.1666…</td>
    </tr>
    <tr>
      <td>8</td>
      <td>1,3,5,7</td>
      <td>4</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9</td>
      <td>1,2,4,5,7,8</td>
      <td>6</td>
      <td>1.5</td>
    </tr>
    <tr>
      <td>10</td>
      <td>1,3,7,9</td>
      <td>4</td>
      <td>2.5</td>
    </tr>
  </tbody>
</table>

<p>It can be seen that \(n=6\) produces a maximum \(n/\phi(n)\) for \(n\leq 10\).</p>

<p>Find the value of \(n\leq 1\,000\,000\) for which \(n/\phi(n)\) is a maximum.</p>

<h2 id="answer">Answer</h2>

<p>Okay, so the first order of business is to find out more about this function. <a href="https://en.wikipedia.org/wiki/Euler's_totient_function">This</a> Wikipedia article states that the actual formula for this is</p>

<table>
  <tbody>
    <tr>
      <td>[\phi(n) = n\prod_{p</td>
      <td>n}\left(1-\frac{1}{p}\right)]</td>
    </tr>
  </tbody>
</table>

<p>Essentially, we take all the distinct prime numbers that divide \(n\) and multiply according to the above. For example, 9 has only prime factor of 3. Thus, \(\phi(n) = 9\left(1-\frac{1}{3}\right) = 9\left(\frac{2}{3}\right) = 6\), as the table shows.</p>

<p>But notice, to calculate for large \(n\), we can keep a Sieve going. Instead of marking off whether numbers are prime or not, we store a running value at each position. Furthermore, since we need the maximum value of \(n/\phi(n)\), we’ll actually need the <strong>least</strong> value of \(\prod_{p\vert n}\left(1 - \frac{1}{p}\right)\). To keep track of which numbers are primes or not, we initialize the array with 1s. That way, if an element isn’t 1, then it was multiplied by some other number, and so isn’t a prime. I use the <code class="highlighter-rouge">numpy</code> package as it makes element-wise marking simple.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Basically make a sieve,
# since totient of a number
# is (1 - 1/p) for each distinct
# prime factor p...
</span><span class="n">limit</span> <span class="o">=</span> <span class="mi">1000000</span>
<span class="n">totient</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">ones</span><span class="p">(</span><span class="n">limit</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">float</span><span class="p">)</span>
<span class="c1"># For each number starting at 2...
</span><span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">limit</span> <span class="o">+</span> <span class="mi">1</span><span class="p">):</span>
    <span class="c1"># If the value isn't 1, then it
</span>    <span class="c1"># was a multiple of a prime factor...
</span>    <span class="k">if</span> <span class="n">totient</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">continue</span>
    <span class="c1"># Otherwise, mark ell multiples
</span>    <span class="n">totient</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">limit</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">n</span><span class="p">)]</span> <span class="o">*=</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="mi">1</span><span class="o">/</span><span class="n">n</span><span class="p">)</span>
<span class="c1"># Minimum value of prod(1 - 1/p) will produce
# maximum n/totient(n)
</span><span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">argmin</span><span class="p">(</span><span class="n">totient</span><span class="p">))</span>
</code></pre></div></div>

<p>Running the above results in an output of,</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>510510
1.3519872 seconds.
</code></pre></div></div>

<p>Thus, \(n=\boxed{510\,510}\) produces the largest value of \(n/\phi(n)\).</p>
:ET