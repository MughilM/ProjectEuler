I"U<h2 id="question">Question</h2>

<p>It can be seen that the number, 125874, and its double 251748, contain exactly the same digits, but in a different order.</p>

<p>Find the smallest positive integer, \(x\), such that \(2x,3x,4x,5x\) and \(6x\), contain the same digits.</p>

<h2 id="answer">Answer</h2>

<p>Nothing too complicated needed. Just keep looping up, and see if the sorted string of digits for the 6 numbers are exactly the same. However, we can make two slight optimizations. Because we are checking 6 multiples, \(x\) should have at least 6 digits. Also, we only have to check up until \(\lfloor 1000000/6 \rfloor=166\), because anything bigger than this will lead to \(x\) having 6 digits, but at least \(6x\) having 7 digits, ruling it out of contention.</p>

<p>To check if all the multiples have the same digits, I convert each number to a string, sort each string, and finally call <code class="highlighter-rouge">set()</code> on the list. If the set has exactly 1 element, then each sorted string is the same, meaning each number had the same digits.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x</span> <span class="o">=</span> <span class="mi">100000</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="o">**</span> <span class="nb">len</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">))</span> <span class="o">/</span> <span class="mi">6</span><span class="p">:</span>
        <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">**</span> <span class="nb">len</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
        <span class="k">continue</span>
    <span class="c1"># Test x through 6x...
</span>    <span class="n">multiples</span> <span class="o">=</span> <span class="p">[</span><span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="nb">sorted</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">x</span> <span class="o">*</span> <span class="n">i</span><span class="p">)))</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">7</span><span class="p">)]</span>
    <span class="c1"># If it has one element after set()...
</span>    <span class="c1"># then they all have the same digits in different
</span>    <span class="c1"># orders.
</span>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="nb">set</span><span class="p">(</span><span class="n">multiples</span><span class="p">))</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">break</span>
    <span class="n">x</span> <span class="o">+=</span> <span class="mi">1</span>
</code></pre></div></div>

<p>Running the loop results in an output of,</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>142857
0.45314348766162477 seconds.
</code></pre></div></div>

<p>Therefore, <strong>142857</strong> has all 6 multiples containing the same digits.</p>
:ET