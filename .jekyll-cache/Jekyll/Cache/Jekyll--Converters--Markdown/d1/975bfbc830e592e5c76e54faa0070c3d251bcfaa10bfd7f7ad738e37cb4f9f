I"—<h2 id="question">Question</h2>

<p>The smallest number expressible as  the sum of a prime square, prime cube, and prime fourth is 28. In fact, there are exactly four numbers below fifty that can be expressed in such a way:</p>

\[28 = 2^2+2^3+2^4
\\
33 = 3^2+2^3+2^4
\\
49 = 5^2+2^3+2^4
\\
47 = 2^2+3^3+2^4\]

<p>How many numbers below fifty million can be expressed as the sum of a prime square, prime cube, and prime fourth power?</p>

<h2 id="answer">Answer</h2>

<p>First, due to our sum, the prime that gets squared has to be less than \(\sqrt{50\,000\,000} = 7071.068\). We can easily generate all primes up to this limit.</p>

<p>Now then, once weâ€™ve chosen a prime to represent the fourth power, we can subtract this off from fifty million, and take the <strong>cube root</strong>, to get the maximum prime that can be cubed. We do the same with the square root. With this method, we can greatly reduce the number of loops and sums we have to test. To actually count the number of numbers, we can use a general sieve of <code class="highlighter-rouge">True</code>â€™s and <code class="highlighter-rouge">False</code>â€™s, and then sum the array in the end.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">sieve</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">primes</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span>
    <span class="c1"># For each number, cross out
</span>    <span class="c1"># numbers that are multiples of it.
</span>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">p</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">primes</span><span class="p">):</span>
        <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">while</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">primes</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">primes</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">%</span> <span class="n">p</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="k">del</span> <span class="n">primes</span><span class="p">[</span><span class="n">j</span><span class="p">]</span>
            <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">primes</span>

<span class="n">limit</span> <span class="o">=</span> <span class="mi">50000000</span>
<span class="n">primes</span> <span class="o">=</span> <span class="n">sieve</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">limit</span> <span class="o">**</span> <span class="mf">0.5</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>

<span class="n">sumSieve</span> <span class="o">=</span> <span class="p">[</span><span class="bp">False</span><span class="p">]</span> <span class="o">*</span> <span class="n">limit</span>
<span class="n">k</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">primes</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">**</span> <span class="mi">4</span> <span class="o">&lt;</span> <span class="n">limit</span><span class="p">:</span>
    <span class="n">s1</span> <span class="o">=</span> <span class="n">primes</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">**</span> <span class="mi">4</span>
    <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">while</span> <span class="n">primes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;</span> <span class="p">(</span><span class="n">limit</span> <span class="o">-</span> <span class="n">s1</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">):</span>
        <span class="n">s2</span> <span class="o">=</span> <span class="n">s1</span> <span class="o">+</span> <span class="n">primes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">**</span> <span class="mi">3</span>
        <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="k">while</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">primes</span><span class="p">)</span> <span class="ow">and</span> <span class="n">primes</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">&lt;</span> <span class="p">(</span><span class="n">limit</span> <span class="o">-</span> <span class="n">s2</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">2</span><span class="p">):</span>
            <span class="n">s3</span> <span class="o">=</span> <span class="n">s2</span> <span class="o">+</span> <span class="n">primes</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">**</span> <span class="mi">2</span>
            <span class="n">sumSieve</span><span class="p">[</span><span class="n">s3</span><span class="p">]</span> <span class="o">=</span> <span class="bp">True</span>
            <span class="n">j</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="n">k</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">sumSieve</span><span class="p">))</span>
</code></pre></div></div>

<p>Running our loop gets us an output of,</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1097343
4.7940836000000004 seconds.
</code></pre></div></div>

<p>Thus, the sum of all numbers that satisfy the condition is <strong>1097343</strong>.</p>
:ET