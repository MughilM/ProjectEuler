I"3<h2 id="question">Question</h2>

<p>A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 x 99.</p>

<p>Find the largest palindrome made from the product of two 3-digit numbers.</p>

<h2 id="answer">Answer</h2>

<p>First need a method to see if a number is a palindrome or not. The following method converts the number into a string, goes through each digit, and compares it to the digit opposite to it. The first mismatch results in a number not being a palindrome.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">isPalindrome</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">num</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span><span class="p">):</span>
        <span class="k">if</span> <span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="nb">str</span><span class="p">(</span><span class="n">n</span><span class="p">)[</span><span class="nb">len</span><span class="p">(</span><span class="n">num</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">-</span> <span class="n">i</span><span class="p">]):</span>
            <span class="k">return</span> <span class="bp">False</span>
    <span class="k">return</span> <span class="bp">True</span>
</code></pre></div></div>

<p>Next, the built-in package <code class="highlighter-rouge">itertools</code> has a method called <code class="highlighter-rouge">combinations</code> along with a parameter <code class="highlighter-rouge">r</code> which will make a generator containing all the ways of selecting <code class="highlighter-rouge">r</code> items from that list. With that generator, we can multiply each pair of numbers whilst removing duplicate products, and simply start at the end of the list, ending as soon as we find our first palindromic number.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">numbers</span> <span class="o">=</span> <span class="nb">sorted</span><span class="p">(</span><span class="nb">set</span><span class="p">([</span><span class="n">a</span> <span class="o">*</span> <span class="n">b</span> <span class="k">for</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="ow">in</span>
                      <span class="n">combinations</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">1000</span><span class="p">),</span> <span class="n">r</span><span class="o">=</span><span class="mi">2</span><span class="p">)]))</span>

<span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">numbers</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
    <span class="k">if</span> <span class="n">isPalindrome</span><span class="p">(</span><span class="n">num</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
        <span class="k">break</span>
</code></pre></div></div>

<p>Running this gives us the output of</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>906609
0.13311525925925927 seconds.
</code></pre></div></div>

<p>Therefore, <strong>906609</strong> is our answer.</p>
:ET